Objects in Javascript:

  -> Objects, in JavaScript, are the most important data type and form the building blocks for modern JavaScript. 
  -> These objects are quite different from JavaScriptâ€™s primitive data types (Number, String, Boolean, null, undefined, and symbol) in the sense that these primitive data types all store a single value each (depending on their types).
  -> While these primitive data types can each hold only a single value, objects are like containers that can hold multiple values at once. 
  -> These values are stored as properties of the object, each with its own key. 
  -> This allows us to group related data and functions together, making our code more organised and easier to understand.

  syntax:
        Syntax:
            new Object(value)
             Object(value)
            let object_name = {
            key_name : value,
             ...
             }

Object prototype properties:
  ->You should avoid calling any Object. 
  -> prototype method directly from the instance, especially those that are not intended to be polymorphic 
  -> (i.e. only its initial behavior makes sense and no descending object could override it in a meaningful way). 
  -> All objects descending from Object.
  -> prototype may define a custom own property that has the same name, but with entirely different semantics from what you expect. 
  -> Furthermore, these properties are not inherited by null-prototype objects. 
  -> All modern JavaScript utilities for working with objects are static. More specifically:



